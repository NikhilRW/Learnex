apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services" // Add Firebase plugin here directly

/**
 * This is the configuration block to customize your React Native Android app.
 * By default, you don't need to apply any configuration; just uncomment the lines you need.
 */
react {
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.learnex"
    defaultConfig {
        applicationId "com.learnex"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [appAuthRedirectScheme: "myapp"]
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
            pickFirsts += ['**/libhermes-executor-debug.so', '**/libhermes-executor-release.so']
        }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    lint {
        disable 'AppLinkUrlError'
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation platform('com.google.firebase:firebase-bom:33.4.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation project(':react-native-splash-screen')
    implementation project(':react-native-inappbrowser-reborn')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-auth'
}

// Add this block before the vector icons configuration
tasks.withType(JavaCompile) {
    dependsOn tasks.matching { task -> task.name.startsWith('copy') && task.name.endsWith('VectorIconFonts') }
}

// Ensure lint task depends on vector icons
tasks.whenTaskAdded { task ->
    if (task.name.contains('LintReport') || task.name.contains('generateDebugLintReportModel')) {
        task.dependsOn tasks.matching { it.name.startsWith('copy') && it.name.endsWith('VectorIconFonts') }
    }
}

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"